#!/usr/bin/env python3
"""
–û—á–∏—Å—Ç–∫–∞ –∫—É–∫–æ–≤ –æ—Ç –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –¥–æ–º–µ–Ω–æ–≤ (Telegram, Google –∏ —Ç.–¥.)
"""

import os
import sys
import asyncio
import json
import logging

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database import Database
from config import DATABASE_URL

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


def clean_cookies_json(cookies_json: str, platform: str) -> str:
    """–û—á–∏—â–∞–µ—Ç JSON –∫—É–∫–∏ –æ—Ç –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –¥–æ–º–µ–Ω–æ–≤"""
    
    # –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –¥–æ–º–µ–Ω—ã –¥–ª—è –∫–∞–∂–¥–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
    ALLOWED_DOMAINS = {
        'instagram': {
            '.instagram.com',
            'instagram.com',
            '.facebook.com',
            'facebook.com',
            '.fbcdn.net',
            'fbcdn.net'
        },
        'youtube': {
            '.youtube.com',
            'youtube.com', 
            '.google.com',
            'google.com',
            '.googleapis.com',
            'googleapis.com',
            '.googlevideo.com',
            'googlevideo.com'
        },
        'tiktok': {
            '.tiktok.com',
            'tiktok.com',
            '.musical.ly',
            'musical.ly',
            '.bytedance.com',
            'bytedance.com'
        }
    }
    
    try:
        cookies = json.loads(cookies_json)
        allowed_domains = ALLOWED_DOMAINS.get(platform, set())
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º –∫—É–∫–∏
        clean_cookies = []
        removed_count = 0
        
        for cookie in cookies:
            if not isinstance(cookie, dict):
                continue
                
            domain = cookie.get('domain', '').lower()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–∑—Ä–µ—à–µ–Ω –ª–∏ –¥–æ–º–µ–Ω
            is_allowed = False
            
            for allowed_domain in allowed_domains:
                if domain == allowed_domain or domain.endswith(allowed_domain):
                    is_allowed = True
                    break
            
            if is_allowed:
                clean_cookies.append(cookie)
            else:
                removed_count += 1
                logger.info(f"   üóëÔ∏è  –£–¥–∞–ª–µ–Ω cookie: {cookie.get('name', 'unknown')}@{domain}")
        
        logger.info(f"   üìä –£–¥–∞–ª–µ–Ω–æ {removed_count} –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –∫—É–∫–æ–≤, –æ—Å—Ç–∞–ª–æ—Å—å {len(clean_cookies)}")
        
        return json.dumps(clean_cookies)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫—É–∫–æ–≤: {e}")
        return cookies_json


async def clean_all_cookies():
    """–û—á–∏—â–∞–µ—Ç –≤—Å–µ –∫—É–∫–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    
    try:
        db = Database(DATABASE_URL)
        
        print("üßπ –û–ß–ò–°–¢–ö–ê –ö–£–ö–û–í –û–¢ –ü–û–°–¢–û–†–û–ù–ù–ò–• –î–û–ú–ï–ù–û–í")
        print("=" * 50)
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫—É–∫–∏
        query = """
            SELECT id, platform, cookies_json, notes
            FROM platform_cookies
            WHERE is_active = TRUE AND deleted_at IS NULL
            ORDER BY platform, id
        """
        
        cookies_records = await db.execute(query, fetch=True)
        
        if not cookies_records:
            print("‚ùå –ö—É–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return
        
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(cookies_records)} –∑–∞–ø–∏—Å–µ–π —Å –∫—É–∫–∞–º–∏")
        
        cleaned_count = 0
        
        for record in cookies_records:
            cookie_id = record['id']
            platform = record['platform']
            original_json = record['cookies_json']
            notes = record.get('notes', '')
            
            print(f"\nüîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫—É–∫–∏ ID:{cookie_id} ({platform})")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ –¥–æ–º–µ–Ω—ã
            try:
                original_cookies = json.loads(original_json)
                
                # –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ –¥–æ–º–µ–Ω—ã
                foreign_domains = set()
                
                for cookie in original_cookies:
                    if isinstance(cookie, dict):
                        domain = cookie.get('domain', '').lower()
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
                        if any(x in domain for x in ['telegram', 'google', 'youtube', 'facebook']) and platform != 'youtube':
                            if platform == 'instagram' and any(x in domain for x in ['facebook', 'fbcdn']):
                                continue  # Facebook –∫—É–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã –¥–ª—è Instagram
                            foreign_domains.add(domain)
                
                if foreign_domains:
                    print(f"   üö® –ù–∞–π–¥–µ–Ω—ã –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ –¥–æ–º–µ–Ω—ã: {', '.join(foreign_domains)}")
                    
                    # –û—á–∏—â–∞–µ–º –∫—É–∫–∏
                    clean_json = clean_cookies_json(original_json, platform)
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                    update_query = """
                        UPDATE platform_cookies 
                        SET cookies_json = %s,
                            notes = %s
                        WHERE id = %s
                    """
                    
                    updated_notes = f"{notes} [CLEANED]" if notes else "[CLEANED]"
                    
                    await db.execute(update_query, (clean_json, updated_notes, cookie_id))
                    
                    print(f"   ‚úÖ –ö—É–∫–∏ –æ—á–∏—â–µ–Ω—ã –∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ –±–∞–∑–µ")
                    cleaned_count += 1
                else:
                    print(f"   ‚úÖ –ö—É–∫–∏ —á–∏—Å—Ç—ã–µ, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
                    
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {e}")
        
        print(f"\nüéâ –û–ß–ò–°–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!")
        print(f"   üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(cookies_records)}")
        print(f"   üßπ –û—á–∏—â–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {cleaned_count}")
        
        if cleaned_count > 0:
            print(f"\nüîÑ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏: {e}")


if __name__ == "__main__":
    print("üßπ –û—á–∏—Å—Ç–∫–∞ –∫—É–∫–æ–≤ –æ—Ç –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –¥–æ–º–µ–Ω–æ–≤...")
    asyncio.run(clean_all_cookies())
