#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∫—É–∫–æ–≤ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
"""

import os
import sys
import asyncio
import json
import logging

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from utils.cookies_manager import CookiesManager
from database import Database
from config import DATABASE_URL

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


def create_test_cookies_with_foreign_domains():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –∫—É–∫–∏ —Å –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–º–∏ –¥–æ–º–µ–Ω–∞–º–∏"""
    
    # –°–º–µ—à–∞–Ω–Ω—ã–µ –∫—É–∫–∏ –¥–ª—è Instagram (–≤–∞–ª–∏–¥–Ω—ã–µ + –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ)
    instagram_cookies = [
        # ‚úÖ –í–∞–ª–∏–¥–Ω—ã–µ Instagram –∫—É–∫–∏
        {
            "domain": ".instagram.com",
            "name": "sessionid",
            "value": "test_session_id_123",
            "path": "/",
            "secure": True,
            "httpOnly": True,
            "expirationDate": 1767225600
        },
        {
            "domain": ".facebook.com", 
            "name": "c_user",
            "value": "100012345678",
            "path": "/",
            "secure": True,
            "httpOnly": False,
            "expirationDate": 1767225600
        },
        # ‚ùå –ü–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ –∫—É–∫–∏ (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–¥–∞–ª–µ–Ω—ã)
        {
            "domain": "telegram.me",
            "name": "stel_web_auth", 
            "value": "https%3A%2F%2Fweb.telegram.org%2Fk%2F",
            "path": "/",
            "secure": True,
            "httpOnly": False,
            "expirationDate": 1789425565
        },
        {
            "domain": ".google.com",
            "name": "NID",
            "value": "511=abcdef123456",
            "path": "/",
            "secure": True,
            "httpOnly": True,
            "expirationDate": 1767225600
        },
        {
            "domain": ".youtube.com",
            "name": "VISITOR_INFO1_LIVE",
            "value": "xyz789",
            "path": "/",
            "secure": True,
            "httpOnly": False,
            "expirationDate": 1767225600
        }
    ]
    
    # –°–º–µ—à–∞–Ω–Ω—ã–µ –∫—É–∫–∏ –¥–ª—è YouTube (–≤–∞–ª–∏–¥–Ω—ã–µ + –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ)
    youtube_cookies = [
        # ‚úÖ –í–∞–ª–∏–¥–Ω—ã–µ YouTube –∫—É–∫–∏
        {
            "domain": ".youtube.com",
            "name": "VISITOR_INFO1_LIVE", 
            "value": "valid_youtube_visitor",
            "path": "/",
            "secure": True,
            "httpOnly": False,
            "expirationDate": 1767225600
        },
        {
            "domain": ".google.com",
            "name": "SID",
            "value": "google_session_123",
            "path": "/", 
            "secure": True,
            "httpOnly": True,
            "expirationDate": 1767225600
        },
        # ‚ùå –ü–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ –∫—É–∫–∏ (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–¥–∞–ª–µ–Ω—ã)
        {
            "domain": ".instagram.com",
            "name": "sessionid",
            "value": "instagram_session_456",
            "path": "/",
            "secure": True,
            "httpOnly": True,
            "expirationDate": 1767225600
        },
        {
            "domain": ".tiktok.com",
            "name": "tt_webid",
            "value": "tiktok_webid_789",
            "path": "/",
            "secure": True,
            "httpOnly": False,
            "expirationDate": 1767225600
        }
    ]
    
    # –°–º–µ—à–∞–Ω–Ω—ã–µ –∫—É–∫–∏ –¥–ª—è TikTok (–≤–∞–ª–∏–¥–Ω—ã–µ + –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ)
    tiktok_cookies = [
        # ‚úÖ –í–∞–ª–∏–¥–Ω—ã–µ TikTok –∫—É–∫–∏
        {
            "domain": ".tiktok.com",
            "name": "tt_webid",
            "value": "valid_tiktok_webid",
            "path": "/",
            "secure": True,
            "httpOnly": False,
            "expirationDate": 1767225600
        },
        {
            "domain": ".bytedance.com",
            "name": "bd_ticket_guard",
            "value": "bytedance_guard_123",
            "path": "/",
            "secure": True,
            "httpOnly": True,
            "expirationDate": 1767225600
        },
        # ‚ùå –ü–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ –∫—É–∫–∏ (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–¥–∞–ª–µ–Ω—ã)
        {
            "domain": ".facebook.com",
            "name": "c_user",
            "value": "facebook_user_123",
            "path": "/",
            "secure": True,
            "httpOnly": False,
            "expirationDate": 1767225600
        },
        {
            "domain": ".google.com",
            "name": "APISID", 
            "value": "google_api_456",
            "path": "/",
            "secure": True,
            "httpOnly": False,
            "expirationDate": 1767225600
        }
    ]
    
    return {
        'instagram': json.dumps(instagram_cookies),
        'youtube': json.dumps(youtube_cookies), 
        'tiktok': json.dumps(tiktok_cookies)
    }


async def test_auto_filtering():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –∫—É–∫–æ–≤"""
    
    try:
        db = Database(DATABASE_URL)
        manager = CookiesManager(db)
        
        print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ô –§–ò–õ–¨–¢–†–ê–¶–ò–ò –ö–£–ö–û–í")
        print("=" * 60)
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫—É–∫–∏ —Å –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–º–∏ –¥–æ–º–µ–Ω–∞–º–∏
        test_cookies = create_test_cookies_with_foreign_domains()
        
        for platform, cookies_json in test_cookies.items():
            print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –¥–ª—è {platform.upper()}")
            print("-" * 40)
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É–∫–æ–≤
            original_cookies = json.loads(cookies_json)
            print(f"üì• –ò—Å—Ö–æ–¥–Ω–æ –∫—É–∫–æ–≤: {len(original_cookies)}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–º–µ–Ω—ã –≤ –∏—Å—Ö–æ–¥–Ω—ã—Ö –∫—É–∫–∞—Ö
            domains = {cookie.get('domain', '') for cookie in original_cookies}
            print(f"üåê –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–æ–º–µ–Ω—ã: {', '.join(domains)}")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫—É–∫–∏ (—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π)
            success = await manager.add_cookies(
                platform=platform,
                cookies_data=cookies_json,
                notes=f"Test cookies for {platform}",
                added_by=1  # Test admin ID
            )
            
            if success:
                print(f"‚úÖ –ö—É–∫–∏ –¥–ª—è {platform} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã —Å –∞–≤—Ç–æ—Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–æ—Ö—Ä–∞–Ω–∏–ª–æ—Å—å –≤ –±–∞–∑–µ
                cookies_from_db = await manager.get_cookies(platform)
                if cookies_from_db:
                    saved_cookies = cookies_from_db['cookies']
                    saved_domains = {cookie.get('domain', '') for cookie in saved_cookies}
                    
                    print(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∫—É–∫–æ–≤: {len(saved_cookies)}")
                    print(f"üåê –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–æ–º–µ–Ω—ã: {', '.join(saved_domains)}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ –¥–æ–º–µ–Ω—ã —É–¥–∞–ª–µ–Ω—ã
                    allowed_domains = manager.allowed_domains.get(platform, set())
                    
                    foreign_domains_found = []
                    for domain in saved_domains:
                        is_allowed = any(domain == ad or domain.endswith(ad) for ad in allowed_domains)
                        if not is_allowed:
                            foreign_domains_found.append(domain)
                    
                    if foreign_domains_found:
                        print(f"‚ùå –û–®–ò–ë–ö–ê: –ù–∞–π–¥–µ–Ω—ã –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ –¥–æ–º–µ–Ω—ã: {foreign_domains_found}")
                    else:
                        print(f"‚úÖ –í—Å–µ –¥–æ–º–µ–Ω—ã –≤–∞–ª–∏–¥–Ω—ã –¥–ª—è {platform}")
                        
                else:
                    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∫—É–∫–∏ –¥–ª—è {platform}")
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –∫—É–∫–∏ –¥–ª—è {platform}")
        
        print(f"\nüéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
        print(f"\nüìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –æ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∫—É–∫–æ–≤...")
    asyncio.run(test_auto_filtering())
