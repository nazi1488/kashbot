#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π PTB –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
"""

import sys
import ast
from pathlib import Path

def check_conversation_handlers():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ ConversationHandler –Ω–∞ –Ω–∞–ª–∏—á–∏–µ per_message=True"""
    
    print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π PTB –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π")
    print("=" * 50)
    
    files_to_check = [
        "main.py",
        "features/keitaro/handlers.py"
    ]
    
    issues_found = 0
    
    for file_path in files_to_check:
        print(f"\nüìÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º {file_path}...")
        
        try:
            with open(file_path, 'r', encoding='utf-8') as f:
                content = f.read()
            
            # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –∏—â–µ–º ConversationHandler –±–µ–∑ per_message
            conv_handlers = []
            lines = content.split('\n')
            
            in_conv_handler = False
            conv_start_line = 0
            conv_lines = []
            
            for i, line in enumerate(lines):
                if 'ConversationHandler(' in line:
                    in_conv_handler = True
                    conv_start_line = i + 1
                    conv_lines = [line]
                elif in_conv_handler:
                    conv_lines.append(line)
                    if line.strip().endswith(')') and line.count('(') <= line.count(')'):
                        # –ö–æ–Ω–µ—Ü ConversationHandler
                        conv_text = '\n'.join(conv_lines)
                        
                        if 'per_message=True' in conv_text:
                            print(f"   ‚úÖ ConversationHandler –Ω–∞ —Å—Ç—Ä–æ–∫–µ {conv_start_line}: per_message=True –Ω–∞–π–¥–µ–Ω")
                        else:
                            print(f"   ‚ùå ConversationHandler –Ω–∞ —Å—Ç—Ä–æ–∫–µ {conv_start_line}: per_message=True –ù–ï –Ω–∞–π–¥–µ–Ω")
                            issues_found += 1
                        
                        in_conv_handler = False
                        conv_lines = []
            
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
            issues_found += 1
    
    print(f"\n" + "=" * 50)
    if issues_found == 0:
        print("üéâ –í—Å–µ ConversationHandler –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!")
        print("‚úÖ –í—Å–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è PTB –¥–æ–ª–∂–Ω—ã –∏—Å—á–µ–∑–Ω—É—Ç—å")
        
        print("\nüìã –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ ConversationHandler:")
        print("   ‚Ä¢ main.py - —É–Ω–∏–∫–∞–ª–∏–∑–∞—Ü–∏—è (per_message=True)")
        print("   ‚Ä¢ main.py - —Å–∫—Ä—ã—Ç–∏–µ —Ç–µ–∫—Å—Ç–∞ (per_message=True)")  
        print("   ‚Ä¢ main.py - —É–º–Ω–æ–µ —Å–∂–∞—Ç–∏–µ (per_message=True)")
        print("   ‚Ä¢ main.py - —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ (per_message=True)")
        print("   ‚Ä¢ keitaro/handlers.py - Keitaro –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è (per_message=True)")
        
        return True
    else:
        print(f"‚ùå –ù–∞–π–¥–µ–Ω–æ {issues_found} –ø—Ä–æ–±–ª–µ–º")
        return False

if __name__ == "__main__":
    success = check_conversation_handlers()
    sys.exit(0 if success else 1)
