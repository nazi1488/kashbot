"""
–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º
"""

import logging
from telegram import Update
from telegram.ext import ContextTypes
from utils.queue_manager import compression_queue
import config

logger = logging.getLogger(__name__)


async def stats_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—á–µ—Ä–µ–¥–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)"""
    user = update.effective_user
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if user.id not in config.BOT_ADMINS:
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats = compression_queue.get_stats()
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    message = f"""üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—á–µ—Ä–µ–¥–∏ —Å–∂–∞—Ç–∏—è**

üîÑ **–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:**
‚Ä¢ –†–∞–∑–º–µ—Ä –æ—á–µ—Ä–µ–¥–∏: {stats['queue_size']}
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á: {stats['current_tasks']}/{stats['max_concurrent']}
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats['active_users']}

üìà **–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**
‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {stats['tasks_processed']}
‚Ä¢ –û—à–∏–±–æ–∫: {stats['tasks_failed']}

üíª **–°–∏—Å—Ç–µ–º–∞:**
‚Ä¢ –ó–∞–≥—Ä—É–∑–∫–∞ CPU: {stats['cpu_usage']:.1f}%
‚Ä¢ –ü–æ—Ä–æ–≥ CPU: {compression_queue.cpu_threshold}%

‚öôÔ∏è **–ù–∞—Å—Ç—Ä–æ–π–∫–∏:**
‚Ä¢ –ú–∞–∫—Å. –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á: {compression_queue.max_concurrent_tasks}
‚Ä¢ –ú–∞–∫—Å. —Ä–∞–∑–º–µ—Ä –æ—á–µ—Ä–µ–¥–∏: {compression_queue.max_queue_size}
‚Ä¢ –¢–∞–π–º–∞—É—Ç –∑–∞–¥–∞—á–∏: {compression_queue.task_timeout}—Å
"""
    
    await update.message.reply_text(message, parse_mode='Markdown')
    
    logger.info(f"Admin {user.id} requested queue stats")
