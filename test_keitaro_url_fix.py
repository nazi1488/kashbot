#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –≤ Keitaro URL –∏ –∫–Ω–æ–ø–∫–∞—Ö
"""

import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent))

def test_keitaro_url_fix():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ Keitaro"""
    
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π Keitaro")
    print("=" * 50)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç Keitaro handlers
        from features.keitaro.handlers import KeitaroHandlers
        print("‚úÖ KeitaroHandlers –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É URL —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è
        class MockContext:
            def __init__(self, domain):
                self.bot_data = {'webhook_domain': domain}
        
        # –¢–µ—Å—Ç 1: –¥–æ–º–µ–Ω —Å https://
        domain_with_https = "https://6c1480216f69.ngrok-free.app"
        if domain_with_https.startswith('http'):
            url = f"{domain_with_https}/integrations/keitaro/postback?secret=test"
        else:
            url = f"https://{domain_with_https}/integrations/keitaro/postback?secret=test"
        
        expected_single_https = "https://6c1480216f69.ngrok-free.app/integrations/keitaro/postback?secret=test"
        if url == expected_single_https:
            print("‚úÖ URL —Å https:// –¥–æ–º–µ–Ω–∞ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ (–æ–¥–Ω–æ https://)")
        else:
            print(f"‚ùå URL –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π: {url}")
            return False
        
        # –¢–µ—Å—Ç 2: –¥–æ–º–µ–Ω –±–µ–∑ https://
        domain_without_https = "6c1480216f69.ngrok-free.app"
        if domain_without_https.startswith('http'):
            url2 = f"{domain_without_https}/integrations/keitaro/postback?secret=test"
        else:
            url2 = f"https://{domain_without_https}/integrations/keitaro/postback?secret=test"
        
        if url2 == expected_single_https:
            print("‚úÖ URL –±–µ–∑ https:// –¥–æ–º–µ–Ω–∞ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ (–¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è https://)")
        else:
            print(f"‚ùå URL –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π: {url2}")
            return False
        
        print("\nüìã –ß—Ç–æ –±—ã–ª–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ:")
        print("   1. ‚úÖ –£–±—Ä–∞–Ω –¥—É–±–ª–∏–∫–∞—Ç https:// –≤ URL")
        print("   2. ‚úÖ –£–±—Ä–∞–Ω–∞ –∫–Ω–æ–ø–∫–∞ '–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å URL'")
        print("   3. ‚úÖ –£–±—Ä–∞–Ω–∞ –∫–Ω–æ–ø–∫–∞ '–õ–∏–º–∏—Ç—ã –∏ –∑–∞—â–∏—Ç–∞'")
        print("   4. ‚úÖ –£–ø—Ä–æ—â–µ–Ω–æ –º–µ–Ω—é Keitaro")
        
        print("\nüö® –ü—Ä–æ–±–ª–µ–º–∞ —Å –¥–≤–æ–π–Ω—ã–º https://:")
        print("   ‚Ä¢ –ë–´–õ–û: f'https://{domain}/...' –≥–¥–µ domain = 'https://example.com'")
        print("   ‚Ä¢ –†–ï–ó–£–õ–¨–¢–ê–¢: 'https://https://example.com/...' ‚ùå")
        print("   ‚Ä¢ –°–¢–ê–õ–û: –ø—Ä–æ–≤–µ—Ä–∫–∞ domain.startswith('http') ‚úÖ")
        
        print("\nüéØ –ù–æ–≤–æ–µ –º–µ–Ω—é Keitaro:")
        print("   ‚Ä¢ üß™ –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
        print("   ‚Ä¢ üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è")
        print("   ‚Ä¢ üîÑ –í–∫–ª/–í—ã–∫–ª –ø—Ä–æ—Ñ–∏–ª—å")
        print("   ‚Ä¢ ‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
        print("   (—É–±—Ä–∞–Ω—ã: —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å URL, –ª–∏–º–∏—Ç—ã)")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = test_keitaro_url_fix()
    
    if success:
        print("\n" + "=" * 50)
        print("üéâ –í—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è Keitaro —Ä–∞–±–æ—Ç–∞—é—Ç!")
        print("\nüí° –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
        print("   ‚Ä¢ URL —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è —Å –æ–¥–Ω–∏–º https://")
        print("   ‚Ä¢ –£–±—Ä–∞–Ω—ã –Ω–µ–Ω—É–∂–Ω—ã–µ –∫–Ω–æ–ø–∫–∏")
        print("   ‚Ä¢ –ú–µ–Ω—é —Å—Ç–∞–ª–æ –ø—Ä–æ—â–µ –∏ –ø–æ–Ω—è—Ç–Ω–µ–µ")
        print("   ‚Ä¢ –ù–µ—Ç –æ—à–∏–±–æ–∫ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞")
    
    sys.exit(0 if success else 1)
