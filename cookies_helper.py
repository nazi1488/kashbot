#!/usr/bin/env python3
"""
–ü–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–∏—Å—Ç–µ–º–æ–π cookies
"""

import asyncio
import asyncpg
import json
import config
import sys

async def show_menu():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    print("\n" + "=" * 50)
    print("üç™ –ü–û–ú–û–©–ù–ò–ö –°–ò–°–¢–ï–ú–´ COOKIES")
    print("=" * 50)
    print("\n1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã")
    print("2. –î–æ–±–∞–≤–∏—Ç—å cookies –∏–∑ —Ñ–∞–π–ª–∞")
    print("3. –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
    print("4. –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–µ–∫—à–∏–µ cookies")
    print("5. –í—ã—Ö–æ–¥")
    
    choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-5): ")
    return choice

async def check_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã...")
    
    try:
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º URL –¥–ª—è asyncpg
        db_url = config.DATABASE_URL
        if '+psycopg' in db_url:
            db_url = db_url.replace('postgresql+psycopg://', 'postgresql://')
        
        conn = await asyncpg.connect(db_url)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
        tables = await conn.fetchval('''
            SELECT COUNT(*) FROM information_schema.tables 
            WHERE table_schema = 'public' 
            AND table_name IN ('platform_cookies', 'download_logs')
        ''')
        
        if tables == 2:
            print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")
        else:
            print("‚ùå –¢–∞–±–ª–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü—Ä–∏–º–µ–Ω–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏!")
            await conn.close()
            return
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º
        stats = await conn.fetch('''
            SELECT platform, 
                   COUNT(*) as total,
                   SUM(CASE WHEN is_active THEN 1 ELSE 0 END) as active
            FROM platform_cookies
            GROUP BY platform
        ''')
        
        print("\nüìä Cookies –ø–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º:")
        for row in stats:
            print(f"   ‚Ä¢ {row['platform']}: {row['active']}/{row['total']} –∞–∫—Ç–∏–≤–Ω—ã—Ö")
        
        if not stats:
            print("   ‚ö†Ô∏è –ù–µ—Ç cookies –≤ –±–∞–∑–µ")
        
        await conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

async def add_cookies_from_file():
    """–î–æ–±–∞–≤–ª—è–µ—Ç cookies –∏–∑ —Ñ–∞–π–ª–∞"""
    platform = input("\n–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ (instagram/tiktok/youtube): ").lower()
    
    if platform not in ['instagram', 'tiktok', 'youtube']:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞!")
        return
    
    file_path = input("–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å cookies (JSON): ")
    
    try:
        with open(file_path, 'r') as f:
            cookies_data = f.read()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –≤–∞–ª–∏–¥–Ω—ã–π JSON
        json.loads(cookies_data)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –ë–î
        db_url = config.DATABASE_URL
        if '+psycopg' in db_url:
            db_url = db_url.replace('postgresql+psycopg://', 'postgresql://')
        
        conn = await asyncpg.connect(db_url)
        
        await conn.execute('''
            INSERT INTO platform_cookies 
            (platform, cookies_json, is_active, success_count, error_count)
            VALUES ($1, $2, true, 0, 0)
        ''', platform, cookies_data)
        
        await conn.close()
        
        print(f"‚úÖ Cookies –¥–ª—è {platform} –¥–æ–±–∞–≤–ª–µ–Ω—ã!")
        
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    except json.JSONDecodeError:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç JSON!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

async def show_statistics():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
    print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã...")
    
    try:
        db_url = config.DATABASE_URL
        if '+psycopg' in db_url:
            db_url = db_url.replace('postgresql+psycopg://', 'postgresql://')
        
        conn = await asyncpg.connect(db_url)
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ cookies
        cookies_stats = await conn.fetch('''
            SELECT platform,
                   COUNT(*) as total,
                   SUM(CASE WHEN is_active THEN 1 ELSE 0 END) as active,
                   SUM(success_count) as successes,
                   SUM(error_count) as errors
            FROM platform_cookies
            GROUP BY platform
            ORDER BY platform
        ''')
        
        print("\nüç™ Cookies:")
        for row in cookies_stats:
            print(f"\n{row['platform'].upper()}:")
            print(f"  –í—Å–µ–≥–æ: {row['total']} (–∞–∫—Ç–∏–≤–Ω—ã—Ö: {row['active']})")
            print(f"  –£—Å–ø–µ—Ö–æ–≤: {row['successes'] or 0}")
            print(f"  –û—à–∏–±–æ–∫: {row['errors'] or 0}")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è–º
        downloads_stats = await conn.fetchval('''
            SELECT COUNT(*) FROM download_logs
        ''')
        
        success_rate = await conn.fetchval('''
            SELECT 
                CASE 
                    WHEN COUNT(*) > 0 
                    THEN ROUND(100.0 * SUM(CASE WHEN success THEN 1 ELSE 0 END) / COUNT(*), 2)
                    ELSE 0
                END as rate
            FROM download_logs
        ''')
        
        print(f"\nüì• –°–∫–∞—á–∏–≤–∞–Ω–∏—è:")
        print(f"  –í—Å–µ–≥–æ –ø–æ–ø—ã—Ç–æ–∫: {downloads_stats}")
        print(f"  –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {success_rate}%")
        
        await conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

async def cleanup_expired():
    """–û—á–∏—â–∞–µ—Ç –∏—Å—Ç–µ–∫—à–∏–µ cookies"""
    print("\nüóë –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–µ–∫—à–∏—Ö cookies...")
    
    try:
        db_url = config.DATABASE_URL
        if '+psycopg' in db_url:
            db_url = db_url.replace('postgresql+psycopg://', 'postgresql://')
        
        conn = await asyncpg.connect(db_url)
        
        # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∏—Å—Ç–µ–∫—à–∏–µ
        result = await conn.execute('''
            UPDATE platform_cookies
            SET is_active = FALSE
            WHERE expires_at < NOW() AND is_active = TRUE
        ''')
        
        # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å –±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –æ—à–∏–±–æ–∫
        result2 = await conn.execute('''
            UPDATE platform_cookies
            SET is_active = FALSE
            WHERE error_count > 5 AND is_active = TRUE
        ''')
        
        await conn.close()
        
        print("‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("\n" + "=" * 50)
    print("üç™ –ü–û–ú–û–©–ù–ò–ö –°–ò–°–¢–ï–ú–´ COOKIES")
    print("=" * 50)
    
    while True:
        choice = await show_menu()
        
        if choice == "1":
            await check_status()
        elif choice == "2":
            await add_cookies_from_file()
        elif choice == "3":
            await show_statistics()
        elif choice == "4":
            await cleanup_expired()
        elif choice == "5":
            print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("\n‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")
        
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n\nüëã –í—ã—Ö–æ–¥...")
