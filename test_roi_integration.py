#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ ROI-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –≤ –±–æ—Ç
"""

import sys
import json
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent))

def test_roi_integration():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é ROI-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞"""
    
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ ROI-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞")
    print("=" * 50)
    
    try:
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—é
        with open('locales/ru.json', 'r', encoding='utf-8') as f:
            locales = json.load(f)
        
        if 'roi_calculator' in locales:
            print(f"‚úÖ –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞: {locales['roi_calculator']}")
        else:
            print("‚ùå –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è ROI-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –ù–ï –Ω–∞–π–¥–µ–Ω–∞")
            return False
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã
        from handlers.roi_calculator import roi_calculator_callback
        from handlers.roi.states import ROIStates  
        from handlers.roi.validators import parse_number, validate_number
        from handlers.roi.metrics import ROIMetrics
        print("‚úÖ –í—Å–µ –º–æ–¥—É–ª–∏ ROI-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è")
        
        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç–∫—Å–ø–æ—Ä—Ç –≤ handlers
        from handlers import (
            roi_calculator_callback, roi_start, input_spend, 
            input_income, input_shows, input_clicks, 
            input_leads, input_sales, cancel_roi, ROIStates
        )
        print("‚úÖ ROI-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –∏–∑ handlers")
        
        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º main.py
        import main
        print("‚úÖ main.py –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è —Å ROI-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–º")
        
        # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–∞—Å—á–µ—Ç E2E
        test_data = {
            'spend': 1095.0,
            'income': 1500.0, 
            'shows': 60000.0,
            'clicks': 2500.0,
            'leads': 85.0,
            'sales': 41.0
        }
        
        calculator = ROIMetrics(test_data)
        card = calculator.format_results_card()
        
        print("\nüìä –¢–µ—Å—Ç–æ–≤–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:")
        print("-" * 40)
        print(card)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        required_in_card = [
            "üìä **–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞**",
            "ROI: +37.0%",
            "CTR: 4.2%",
            "CTC: 3.4%", 
            "CTB: 48.2%",
            "ROAS: 1.37"
        ]
        
        print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–∞—Ä—Ç–æ—á–∫–∏:")
        for element in required_in_card:
            if element in card:
                print(f"‚úÖ {element}")
            else:
                print(f"‚ùå –ù–ï –Ω–∞–π–¥–µ–Ω: {element}")
                return False
        
        print("\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –º–æ–¥—É–ª–µ–π:")
        print("   ‚úÖ handlers/roi_calculator.py - –æ—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫")
        print("   ‚úÖ handlers/roi/states.py - —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM")
        print("   ‚úÖ handlers/roi/validators.py - –ø–∞—Ä—Å–∏–Ω–≥ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è")
        print("   ‚úÖ handlers/roi/metrics.py - —Ä–∞—Å—á–µ—Ç—ã –∏ —Ñ–æ—Ä–º—É–ª—ã")
        print("   ‚úÖ test_roi_metrics.py - —Ç–µ—Å—Ç—ã")
        
        print("\nüéØ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:")
        print("   ‚úÖ –ü–æ—à–∞–≥–æ–≤—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π")
        print("   ‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ —á–∏—Å–µ–ª")
        print("   ‚úÖ –†–∞—Å—á–µ—Ç 12+ –º–µ—Ç—Ä–∏–∫ –∞—Ä–±–∏—Ç—Ä–∞–∂–∞")
        print("   ‚úÖ –ö—Ä–∞—Å–∏–≤–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
        print("   ‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_user_flow():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Å—Ü–µ–Ω–∞—Ä–∏–π"""
    print("\nüë§ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è")
    print("-" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
    test_inputs = [
        "1095",      # –ø—Ä–æ—Å—Ç–æ–µ —á–∏—Å–ª–æ
        "1,095",     # —Å –∑–∞–ø—è—Ç–æ–π
        "1 095",     # —Å –ø—Ä–æ–±–µ–ª–∞–º–∏
        "1095.50",   # —Å —Ç–æ—á–∫–æ–π
        "1,095.50",  # –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π
        "$1095",     # —Å –≤–∞–ª—é—Ç–æ–π
    ]
    
    from handlers.roi.validators import parse_number
    
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞:")
    for inp in test_inputs:
        result = parse_number(inp)
        print(f"  '{inp}' ‚Üí {result}")
    
    return True

def main():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏"""
    print("üßÆ –§–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ROI-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞")
    print("=" * 60)
    
    tests = [test_roi_integration, test_user_flow]
    results = []
    
    for test in tests:
        try:
            result = test()
            results.append(result)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
            results.append(False)
    
    print("\n" + "=" * 60)
    
    if all(results):
        print("üéâ ROI-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω!")
        print("\nüì± –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:")
        print("   1. –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚Üí üìä –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∞—Ä–±–∏—Ç—Ä–∞–∂–Ω–∏–∫–∞")
        print("   2. ‚ñ∂Ô∏è –ù–∞—á–∞—Ç—å —Ä–∞—Å—á–µ—Ç")
        print("   3. –í–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ —à–∞–≥–∞–º (–º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å)")
        print("   4. –ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É –º–µ—Ç—Ä–∏–∫")
        print("   5. üîÅ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –∑–∞–Ω–æ–≤–æ –∏–ª–∏ üîô –í –º–µ–Ω—é")
        
        print("\nüí° –§–∏—á–∏:")
        print("   ‚Ä¢ –£–º–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ —á–∏—Å–µ–ª (1000, 1,000, $1000)")
        print("   ‚Ä¢ 12+ –º–µ—Ç—Ä–∏–∫: ROI, CTR, CPC, CPA, ROAS –∏ –¥—Ä.")
        print("   ‚Ä¢ –ó–∞—â–∏—Ç–∞ –æ—Ç –æ—à–∏–±–æ–∫ –∏ –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–ª—å")  
        print("   ‚Ä¢ –ö—Ä–∞—Å–∏–≤—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
        print("   ‚Ä¢ –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –≤—Å–µ—Ö –º–µ—Ç—Ä–∏–∫")
        
        return 0
    else:
        print("‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π")
        return 1

if __name__ == "__main__":
    sys.exit(main())
